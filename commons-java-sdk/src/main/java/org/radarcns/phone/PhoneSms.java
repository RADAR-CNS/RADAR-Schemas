/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.radarcns.phone;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** Data from log sent and received text messages. */
@org.apache.avro.specific.AvroGenerated
public class PhoneSms extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 264422054901560852L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PhoneSms\",\"namespace\":\"org.radarcns.phone\",\"doc\":\"Data from log sent and received text messages.\",\"fields\":[{\"name\":\"time\",\"type\":\"double\",\"doc\":\"device timestamp in UTC (s)\"},{\"name\":\"timeReceived\",\"type\":\"double\",\"doc\":\"device receiver timestamp in UTC (s)\"},{\"name\":\"target\",\"type\":[\"null\",\"bytes\"],\"doc\":\"HMAC SHA-256 one-way source/target of the SMS. This hash of a given phone number will be the same unless the app is reinstalled. If the number is unknown or anonymous, this contains null.\",\"default\":null},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"PhoneSmsType\",\"symbols\":[\"INCOMING\",\"OUTGOING\",\"OTHER\",\"UNKNOWN\"]},\"doc\":\"direction of the SMS\",\"default\":\"UNKNOWN\"},{\"name\":\"length\",\"type\":\"int\",\"doc\":\"number of characters in the message (-1 if unknown)\",\"default\":-1}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** device timestamp in UTC (s) */
  @Deprecated public double time;
  /** device receiver timestamp in UTC (s) */
  @Deprecated public double timeReceived;
  /** HMAC SHA-256 one-way source/target of the SMS. This hash of a given phone number will be the same unless the app is reinstalled. If the number is unknown or anonymous, this contains null. */
  @Deprecated public java.nio.ByteBuffer target;
  /** direction of the SMS */
  @Deprecated public org.radarcns.phone.PhoneSmsType type;
  /** number of characters in the message (-1 if unknown) */
  @Deprecated public int length;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PhoneSms() {}

  /**
   * All-args constructor.
   * @param time device timestamp in UTC (s)
   * @param timeReceived device receiver timestamp in UTC (s)
   * @param target HMAC SHA-256 one-way source/target of the SMS. This hash of a given phone number will be the same unless the app is reinstalled. If the number is unknown or anonymous, this contains null.
   * @param type direction of the SMS
   * @param length number of characters in the message (-1 if unknown)
   */
  public PhoneSms(java.lang.Double time, java.lang.Double timeReceived, java.nio.ByteBuffer target, org.radarcns.phone.PhoneSmsType type, java.lang.Integer length) {
    this.time = time;
    this.timeReceived = timeReceived;
    this.target = target;
    this.type = type;
    this.length = length;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return time;
    case 1: return timeReceived;
    case 2: return target;
    case 3: return type;
    case 4: return length;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: time = (java.lang.Double)value$; break;
    case 1: timeReceived = (java.lang.Double)value$; break;
    case 2: target = (java.nio.ByteBuffer)value$; break;
    case 3: type = (org.radarcns.phone.PhoneSmsType)value$; break;
    case 4: length = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'time' field.
   * @return device timestamp in UTC (s)
   */
  public java.lang.Double getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * device timestamp in UTC (s)
   * @param value the value to set.
   */
  public void setTime(java.lang.Double value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'timeReceived' field.
   * @return device receiver timestamp in UTC (s)
   */
  public java.lang.Double getTimeReceived() {
    return timeReceived;
  }

  /**
   * Sets the value of the 'timeReceived' field.
   * device receiver timestamp in UTC (s)
   * @param value the value to set.
   */
  public void setTimeReceived(java.lang.Double value) {
    this.timeReceived = value;
  }

  /**
   * Gets the value of the 'target' field.
   * @return HMAC SHA-256 one-way source/target of the SMS. This hash of a given phone number will be the same unless the app is reinstalled. If the number is unknown or anonymous, this contains null.
   */
  public java.nio.ByteBuffer getTarget() {
    return target;
  }

  /**
   * Sets the value of the 'target' field.
   * HMAC SHA-256 one-way source/target of the SMS. This hash of a given phone number will be the same unless the app is reinstalled. If the number is unknown or anonymous, this contains null.
   * @param value the value to set.
   */
  public void setTarget(java.nio.ByteBuffer value) {
    this.target = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return direction of the SMS
   */
  public org.radarcns.phone.PhoneSmsType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * direction of the SMS
   * @param value the value to set.
   */
  public void setType(org.radarcns.phone.PhoneSmsType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'length' field.
   * @return number of characters in the message (-1 if unknown)
   */
  public java.lang.Integer getLength() {
    return length;
  }

  /**
   * Sets the value of the 'length' field.
   * number of characters in the message (-1 if unknown)
   * @param value the value to set.
   */
  public void setLength(java.lang.Integer value) {
    this.length = value;
  }

  /**
   * Creates a new PhoneSms RecordBuilder.
   * @return A new PhoneSms RecordBuilder
   */
  public static org.radarcns.phone.PhoneSms.Builder newBuilder() {
    return new org.radarcns.phone.PhoneSms.Builder();
  }

  /**
   * Creates a new PhoneSms RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PhoneSms RecordBuilder
   */
  public static org.radarcns.phone.PhoneSms.Builder newBuilder(org.radarcns.phone.PhoneSms.Builder other) {
    return new org.radarcns.phone.PhoneSms.Builder(other);
  }

  /**
   * Creates a new PhoneSms RecordBuilder by copying an existing PhoneSms instance.
   * @param other The existing instance to copy.
   * @return A new PhoneSms RecordBuilder
   */
  public static org.radarcns.phone.PhoneSms.Builder newBuilder(org.radarcns.phone.PhoneSms other) {
    return new org.radarcns.phone.PhoneSms.Builder(other);
  }

  /**
   * RecordBuilder for PhoneSms instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PhoneSms>
    implements org.apache.avro.data.RecordBuilder<PhoneSms> {

    /** device timestamp in UTC (s) */
    private double time;
    /** device receiver timestamp in UTC (s) */
    private double timeReceived;
    /** HMAC SHA-256 one-way source/target of the SMS. This hash of a given phone number will be the same unless the app is reinstalled. If the number is unknown or anonymous, this contains null. */
    private java.nio.ByteBuffer target;
    /** direction of the SMS */
    private org.radarcns.phone.PhoneSmsType type;
    /** number of characters in the message (-1 if unknown) */
    private int length;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.radarcns.phone.PhoneSms.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.time)) {
        this.time = data().deepCopy(fields()[0].schema(), other.time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timeReceived)) {
        this.timeReceived = data().deepCopy(fields()[1].schema(), other.timeReceived);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.target)) {
        this.target = data().deepCopy(fields()[2].schema(), other.target);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.length)) {
        this.length = data().deepCopy(fields()[4].schema(), other.length);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PhoneSms instance
     * @param other The existing instance to copy.
     */
    private Builder(org.radarcns.phone.PhoneSms other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.time)) {
        this.time = data().deepCopy(fields()[0].schema(), other.time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timeReceived)) {
        this.timeReceived = data().deepCopy(fields()[1].schema(), other.timeReceived);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.target)) {
        this.target = data().deepCopy(fields()[2].schema(), other.target);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.length)) {
        this.length = data().deepCopy(fields()[4].schema(), other.length);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'time' field.
      * device timestamp in UTC (s)
      * @return The value.
      */
    public java.lang.Double getTime() {
      return time;
    }

    /**
      * Sets the value of the 'time' field.
      * device timestamp in UTC (s)
      * @param value The value of 'time'.
      * @return This builder.
      */
    public org.radarcns.phone.PhoneSms.Builder setTime(double value) {
      validate(fields()[0], value);
      this.time = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * device timestamp in UTC (s)
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'time' field.
      * device timestamp in UTC (s)
      * @return This builder.
      */
    public org.radarcns.phone.PhoneSms.Builder clearTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeReceived' field.
      * device receiver timestamp in UTC (s)
      * @return The value.
      */
    public java.lang.Double getTimeReceived() {
      return timeReceived;
    }

    /**
      * Sets the value of the 'timeReceived' field.
      * device receiver timestamp in UTC (s)
      * @param value The value of 'timeReceived'.
      * @return This builder.
      */
    public org.radarcns.phone.PhoneSms.Builder setTimeReceived(double value) {
      validate(fields()[1], value);
      this.timeReceived = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'timeReceived' field has been set.
      * device receiver timestamp in UTC (s)
      * @return True if the 'timeReceived' field has been set, false otherwise.
      */
    public boolean hasTimeReceived() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'timeReceived' field.
      * device receiver timestamp in UTC (s)
      * @return This builder.
      */
    public org.radarcns.phone.PhoneSms.Builder clearTimeReceived() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'target' field.
      * HMAC SHA-256 one-way source/target of the SMS. This hash of a given phone number will be the same unless the app is reinstalled. If the number is unknown or anonymous, this contains null.
      * @return The value.
      */
    public java.nio.ByteBuffer getTarget() {
      return target;
    }

    /**
      * Sets the value of the 'target' field.
      * HMAC SHA-256 one-way source/target of the SMS. This hash of a given phone number will be the same unless the app is reinstalled. If the number is unknown or anonymous, this contains null.
      * @param value The value of 'target'.
      * @return This builder.
      */
    public org.radarcns.phone.PhoneSms.Builder setTarget(java.nio.ByteBuffer value) {
      validate(fields()[2], value);
      this.target = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'target' field has been set.
      * HMAC SHA-256 one-way source/target of the SMS. This hash of a given phone number will be the same unless the app is reinstalled. If the number is unknown or anonymous, this contains null.
      * @return True if the 'target' field has been set, false otherwise.
      */
    public boolean hasTarget() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'target' field.
      * HMAC SHA-256 one-way source/target of the SMS. This hash of a given phone number will be the same unless the app is reinstalled. If the number is unknown or anonymous, this contains null.
      * @return This builder.
      */
    public org.radarcns.phone.PhoneSms.Builder clearTarget() {
      target = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * direction of the SMS
      * @return The value.
      */
    public org.radarcns.phone.PhoneSmsType getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * direction of the SMS
      * @param value The value of 'type'.
      * @return This builder.
      */
    public org.radarcns.phone.PhoneSms.Builder setType(org.radarcns.phone.PhoneSmsType value) {
      validate(fields()[3], value);
      this.type = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * direction of the SMS
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'type' field.
      * direction of the SMS
      * @return This builder.
      */
    public org.radarcns.phone.PhoneSms.Builder clearType() {
      type = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'length' field.
      * number of characters in the message (-1 if unknown)
      * @return The value.
      */
    public java.lang.Integer getLength() {
      return length;
    }

    /**
      * Sets the value of the 'length' field.
      * number of characters in the message (-1 if unknown)
      * @param value The value of 'length'.
      * @return This builder.
      */
    public org.radarcns.phone.PhoneSms.Builder setLength(int value) {
      validate(fields()[4], value);
      this.length = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'length' field has been set.
      * number of characters in the message (-1 if unknown)
      * @return True if the 'length' field has been set, false otherwise.
      */
    public boolean hasLength() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'length' field.
      * number of characters in the message (-1 if unknown)
      * @return This builder.
      */
    public org.radarcns.phone.PhoneSms.Builder clearLength() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public PhoneSms build() {
      try {
        PhoneSms record = new PhoneSms();
        record.time = fieldSetFlags()[0] ? this.time : (java.lang.Double) defaultValue(fields()[0]);
        record.timeReceived = fieldSetFlags()[1] ? this.timeReceived : (java.lang.Double) defaultValue(fields()[1]);
        record.target = fieldSetFlags()[2] ? this.target : (java.nio.ByteBuffer) defaultValue(fields()[2]);
        record.type = fieldSetFlags()[3] ? this.type : (org.radarcns.phone.PhoneSmsType) defaultValue(fields()[3]);
        record.length = fieldSetFlags()[4] ? this.length : (java.lang.Integer) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
