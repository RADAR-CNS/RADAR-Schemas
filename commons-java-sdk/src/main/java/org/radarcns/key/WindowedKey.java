/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.radarcns.key;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** Windowed key in the RADAR-CNS project */
@org.apache.avro.specific.AvroGenerated
public class WindowedKey extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -37440375880979989L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WindowedKey\",\"namespace\":\"org.radarcns.key\",\"doc\":\"Windowed key in the RADAR-CNS project\",\"fields\":[{\"name\":\"userID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sourceID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"start\",\"type\":\"long\"},{\"name\":\"end\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String userID;
  @Deprecated public java.lang.String sourceID;
  @Deprecated public long start;
  @Deprecated public long end;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public WindowedKey() {}

  /**
   * All-args constructor.
   * @param userID The new value for userID
   * @param sourceID The new value for sourceID
   * @param start The new value for start
   * @param end The new value for end
   */
  public WindowedKey(java.lang.String userID, java.lang.String sourceID, java.lang.Long start, java.lang.Long end) {
    this.userID = userID;
    this.sourceID = sourceID;
    this.start = start;
    this.end = end;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return userID;
    case 1: return sourceID;
    case 2: return start;
    case 3: return end;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: userID = (java.lang.String)value$; break;
    case 1: sourceID = (java.lang.String)value$; break;
    case 2: start = (java.lang.Long)value$; break;
    case 3: end = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'userID' field.
   * @return The value of the 'userID' field.
   */
  public java.lang.String getUserID() {
    return userID;
  }

  /**
   * Sets the value of the 'userID' field.
   * @param value the value to set.
   */
  public void setUserID(java.lang.String value) {
    this.userID = value;
  }

  /**
   * Gets the value of the 'sourceID' field.
   * @return The value of the 'sourceID' field.
   */
  public java.lang.String getSourceID() {
    return sourceID;
  }

  /**
   * Sets the value of the 'sourceID' field.
   * @param value the value to set.
   */
  public void setSourceID(java.lang.String value) {
    this.sourceID = value;
  }

  /**
   * Gets the value of the 'start' field.
   * @return The value of the 'start' field.
   */
  public java.lang.Long getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * @param value the value to set.
   */
  public void setStart(java.lang.Long value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'end' field.
   * @return The value of the 'end' field.
   */
  public java.lang.Long getEnd() {
    return end;
  }

  /**
   * Sets the value of the 'end' field.
   * @param value the value to set.
   */
  public void setEnd(java.lang.Long value) {
    this.end = value;
  }

  /**
   * Creates a new WindowedKey RecordBuilder.
   * @return A new WindowedKey RecordBuilder
   */
  public static org.radarcns.key.WindowedKey.Builder newBuilder() {
    return new org.radarcns.key.WindowedKey.Builder();
  }

  /**
   * Creates a new WindowedKey RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new WindowedKey RecordBuilder
   */
  public static org.radarcns.key.WindowedKey.Builder newBuilder(org.radarcns.key.WindowedKey.Builder other) {
    return new org.radarcns.key.WindowedKey.Builder(other);
  }

  /**
   * Creates a new WindowedKey RecordBuilder by copying an existing WindowedKey instance.
   * @param other The existing instance to copy.
   * @return A new WindowedKey RecordBuilder
   */
  public static org.radarcns.key.WindowedKey.Builder newBuilder(org.radarcns.key.WindowedKey other) {
    return new org.radarcns.key.WindowedKey.Builder(other);
  }

  /**
   * RecordBuilder for WindowedKey instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WindowedKey>
    implements org.apache.avro.data.RecordBuilder<WindowedKey> {

    private java.lang.String userID;
    private java.lang.String sourceID;
    private long start;
    private long end;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.radarcns.key.WindowedKey.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userID)) {
        this.userID = data().deepCopy(fields()[0].schema(), other.userID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sourceID)) {
        this.sourceID = data().deepCopy(fields()[1].schema(), other.sourceID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.start)) {
        this.start = data().deepCopy(fields()[2].schema(), other.start);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.end)) {
        this.end = data().deepCopy(fields()[3].schema(), other.end);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing WindowedKey instance
     * @param other The existing instance to copy.
     */
    private Builder(org.radarcns.key.WindowedKey other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.userID)) {
        this.userID = data().deepCopy(fields()[0].schema(), other.userID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sourceID)) {
        this.sourceID = data().deepCopy(fields()[1].schema(), other.sourceID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.start)) {
        this.start = data().deepCopy(fields()[2].schema(), other.start);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.end)) {
        this.end = data().deepCopy(fields()[3].schema(), other.end);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'userID' field.
      * @return The value.
      */
    public java.lang.String getUserID() {
      return userID;
    }

    /**
      * Sets the value of the 'userID' field.
      * @param value The value of 'userID'.
      * @return This builder.
      */
    public org.radarcns.key.WindowedKey.Builder setUserID(java.lang.String value) {
      validate(fields()[0], value);
      this.userID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'userID' field has been set.
      * @return True if the 'userID' field has been set, false otherwise.
      */
    public boolean hasUserID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'userID' field.
      * @return This builder.
      */
    public org.radarcns.key.WindowedKey.Builder clearUserID() {
      userID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceID' field.
      * @return The value.
      */
    public java.lang.String getSourceID() {
      return sourceID;
    }

    /**
      * Sets the value of the 'sourceID' field.
      * @param value The value of 'sourceID'.
      * @return This builder.
      */
    public org.radarcns.key.WindowedKey.Builder setSourceID(java.lang.String value) {
      validate(fields()[1], value);
      this.sourceID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceID' field has been set.
      * @return True if the 'sourceID' field has been set, false otherwise.
      */
    public boolean hasSourceID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sourceID' field.
      * @return This builder.
      */
    public org.radarcns.key.WindowedKey.Builder clearSourceID() {
      sourceID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'start' field.
      * @return The value.
      */
    public java.lang.Long getStart() {
      return start;
    }

    /**
      * Sets the value of the 'start' field.
      * @param value The value of 'start'.
      * @return This builder.
      */
    public org.radarcns.key.WindowedKey.Builder setStart(long value) {
      validate(fields()[2], value);
      this.start = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'start' field has been set.
      * @return True if the 'start' field has been set, false otherwise.
      */
    public boolean hasStart() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'start' field.
      * @return This builder.
      */
    public org.radarcns.key.WindowedKey.Builder clearStart() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'end' field.
      * @return The value.
      */
    public java.lang.Long getEnd() {
      return end;
    }

    /**
      * Sets the value of the 'end' field.
      * @param value The value of 'end'.
      * @return This builder.
      */
    public org.radarcns.key.WindowedKey.Builder setEnd(long value) {
      validate(fields()[3], value);
      this.end = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'end' field has been set.
      * @return True if the 'end' field has been set, false otherwise.
      */
    public boolean hasEnd() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'end' field.
      * @return This builder.
      */
    public org.radarcns.key.WindowedKey.Builder clearEnd() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public WindowedKey build() {
      try {
        WindowedKey record = new WindowedKey();
        record.userID = fieldSetFlags()[0] ? this.userID : (java.lang.String) defaultValue(fields()[0]);
        record.sourceID = fieldSetFlags()[1] ? this.sourceID : (java.lang.String) defaultValue(fields()[1]);
        record.start = fieldSetFlags()[2] ? this.start : (java.lang.Long) defaultValue(fields()[2]);
        record.end = fieldSetFlags()[3] ? this.end : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
